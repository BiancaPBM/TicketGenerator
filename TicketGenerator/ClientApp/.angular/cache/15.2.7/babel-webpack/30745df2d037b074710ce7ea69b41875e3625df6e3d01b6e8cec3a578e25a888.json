{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { TicketBox } from \"../../models/ticket-box.model\";\nimport { Box } from \"../../models/box.model\";\nlet TicketGeneratorComponent = class TicketGeneratorComponent {\n  constructor(ticketService, formBuilder) {\n    this.ticketService = ticketService;\n    this.formBuilder = formBuilder;\n    this.boxNumber = 0;\n    this.form = this.formBuilder.group({\n      boxes: new FormControl(null, Validators.required),\n      name: new FormControl(null),\n      hasSuperzahl: new FormControl(null)\n    });\n    this.tickets = [];\n    this.hasArrowsAvailable = false;\n  }\n  ngOnInit() {\n    this.ticketService.getTickets().subscribe(res => this.tickets = res);\n  }\n  generateTicket(n) {\n    if (n == null || n < 1 || n > 100) return;\n    this.hasArrowsAvailable = false;\n    this.boxNumber = 0;\n    let boxes = [];\n    let interval = setInterval(() => {\n      boxes.push(new Box(this.generateNumbers()));\n      if (--n == 0) {\n        let superZahl = null;\n        clearInterval(interval);\n        if (this.form.controls.hasSuperzahl.value) {\n          superZahl = Math.floor(Math.random() * 9) + 1;\n        }\n        let ticket = new TicketBox(this.form.controls.name.value, boxes, superZahl);\n        this.ticketService.createTicket(ticket).subscribe(res => {\n          this.ticketService.getTickets().subscribe(res => this.tickets = res);\n        });\n      }\n    }, 3000);\n  }\n  generateNumbers() {\n    var numbers = [];\n    while (numbers.length < 6) {\n      var random = Math.floor(Math.random() * 49) + 1;\n      if (numbers.indexOf(random) == -1) {\n        numbers.push(random);\n      }\n    }\n    numbers.sort((a, b) => {\n      return a - b;\n    });\n    const existingNumbers = new Set(numbers);\n    this.colorNumbers(existingNumbers);\n    return numbers;\n  }\n  colorNumbers(existingNumbers) {\n    var ball = document.getElementsByClassName(\"ball\");\n    for (var i = 0; i < ball.length; i++) {\n      ball[i].style.backgroundColor = \"white\";\n      ball[i].style.color = \"#3d3c3a\";\n      if (existingNumbers.has(parseInt(ball[i].innerHTML))) {\n        ball[i].style.backgroundColor = \"#0f5132\";\n        ball[i].style.color = \"white\";\n      }\n    }\n  }\n  displayNextBox() {\n    if (this.displayTicket != null && this.boxNumber < this.displayTicket.boxes.length - 1) {\n      this.boxNumber++;\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\n    }\n  }\n  displayPreviousBox() {\n    if (this.displayTicket != null && this.boxNumber > 0) {\n      --this.boxNumber;\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\n    }\n  }\n  getTicketById(id) {\n    this.ticketService.getTicketById(id).subscribe(res => {\n      this.boxNumber = 0;\n      this.displayTicket = new TicketBox(res.name, res.boxes, res.superzahl);\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\n      this.hasArrowsAvailable = true;\n    });\n  }\n  getNumbers(box) {\n    return new Set([box.number1, box.number2, box.number3, box.number4, box.number5, box.number6]);\n  }\n};\nTicketGeneratorComponent = __decorate([Component({\n  selector: 'ticket-generator',\n  templateUrl: './ticket-generator.component.html',\n  styleUrls: ['./ticket-generator.component.scss']\n})], TicketGeneratorComponent);\nexport { TicketGeneratorComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","TicketBox","Box","TicketGeneratorComponent","constructor","ticketService","formBuilder","group","boxes","required","name","hasSuperzahl","ngOnInit","getTickets","subscribe","res","tickets","generateTicket","n","hasArrowsAvailable","boxNumber","interval","setInterval","push","generateNumbers","superZahl","clearInterval","form","controls","value","Math","floor","random","ticket","createTicket","numbers","length","indexOf","sort","a","b","existingNumbers","Set","colorNumbers","ball","document","getElementsByClassName","i","style","backgroundColor","color","has","parseInt","innerHTML","displayNextBox","displayTicket","getNumbers","displayPreviousBox","getTicketById","id","superzahl","box","number1","number2","number3","number4","number5","number6","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\TicketGenerator\\TicketGenerator\\ClientApp\\src\\app\\components\\ticket-generator\\ticket-generator.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Ticket } from \"../../models/ticket.model\";\r\nimport { TicketBox } from \"../../models/ticket-box.model\";\r\nimport { Box } from \"../../models/box.model\";\r\nimport { TicketGeneratorService } from \"../../services/ticket-generator.service\";\r\n\r\n@Component({\r\n  selector: 'ticket-generator',\r\n  templateUrl: './ticket-generator.component.html',\r\n  styleUrls: ['./ticket-generator.component.scss']\r\n})\r\nexport class TicketGeneratorComponent implements OnInit {\r\n  constructor(private ticketService: TicketGeneratorService, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ticketService.getTickets().subscribe(res => this.tickets = res);\r\n  }\r\n  boxNumber: number = 0;\r\n  form = this.formBuilder.group({\r\n    boxes: new FormControl(null, Validators.required),\r\n    name: new FormControl(null),\r\n    hasSuperzahl: new FormControl(null)\r\n  })\r\n  displayTicket: TicketBox | undefined;\r\n  tickets: Ticket[] = [];\r\n  hasArrowsAvailable: boolean = false;\r\n\r\n  generateTicket(n: any): void {\r\n    if (n == null || n < 1 || n > 100)\r\n      return;\r\n    this.hasArrowsAvailable = false;\r\n    this.boxNumber = 0;\r\n    let boxes: Box[] = [];\r\n    let interval = setInterval(() => {\r\n      boxes.push(new Box(this.generateNumbers()));\r\n      if (--n == 0) {\r\n        let superZahl = null;\r\n        clearInterval(interval);\r\n        if (this.form.controls.hasSuperzahl.value) {\r\n          superZahl = Math.floor(Math.random() * 9) + 1;\r\n        }\r\n        let ticket = new TicketBox(this.form.controls.name.value, boxes, superZahl);\r\n        this.ticketService.createTicket(ticket).subscribe(res => {\r\n          this.ticketService.getTickets().subscribe(res => this.tickets = res);\r\n        })\r\n      }\r\n    }, 3000)\r\n  }\r\n\r\n  generateNumbers(): number[] {\r\n    var numbers = [];\r\n\r\n    while (numbers.length < 6) {\r\n      var random = Math.floor(Math.random() * 49) + 1;\r\n      if (numbers.indexOf(random) == -1) {\r\n        numbers.push(random);\r\n      }\r\n    }\r\n    numbers.sort((a, b) => {\r\n      return a - b;\r\n    });\r\n\r\n    const existingNumbers = new Set(numbers);\r\n    this.colorNumbers(existingNumbers);\r\n    return numbers;\r\n  }\r\n\r\n  colorNumbers(existingNumbers: any) {\r\n    var ball = document.getElementsByClassName(\"ball\") as HTMLCollectionOf<HTMLElement>;\r\n    for (var i = 0; i < ball.length; i++) {\r\n      ball[i].style.backgroundColor = \"white\";\r\n      ball[i].style.color = \"#3d3c3a\";\r\n      if (existingNumbers.has(parseInt(ball[i].innerHTML))) {\r\n        ball[i].style.backgroundColor = \"#0f5132\";\r\n        ball[i].style.color = \"white\";\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  displayNextBox(): void {\r\n    if (this.displayTicket != null && this.boxNumber < this.displayTicket.boxes.length - 1) {\r\n      this.boxNumber++;\r\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\r\n    }\r\n  }\r\n\r\n  displayPreviousBox(): void {\r\n    if (this.displayTicket != null && this.boxNumber > 0) {\r\n      --this.boxNumber;\r\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\r\n    }\r\n  }\r\n\r\n  getTicketById(id: number) {\r\n    this.ticketService.getTicketById(id).subscribe(res => {\r\n      this.boxNumber = 0;\r\n      this.displayTicket = new TicketBox(res.name, res.boxes, res.superzahl);\r\n      this.colorNumbers(this.getNumbers(this.displayTicket.boxes[this.boxNumber]));\r\n      this.hasArrowsAvailable = true;\r\n    }\r\n    );\r\n  }\r\n\r\n  getNumbers(box: Box): Set<number> {\r\n    return new Set([box.number1, box.number2, box.number3, box.number4, box.number5, box.number6]);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}